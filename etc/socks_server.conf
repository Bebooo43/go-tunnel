# Example config file:
#   - listen on Quic and connect to dynamic endpoints based on socks messages
#     in the quic stream
#   - outgoing connection is dynamic - based on socks message
#     stream
#
# Log file; can be one of:
#  - Absolute path
#  - SYSLOG
#  - STDOUT
#  - STDERR
log: STDOUT
#log: STDOUT

# Logging level - "DEBUG", "INFO", "WARN", "ERROR"
loglevel: DEBUG

# Drop privileges after reading certs and binding to listeners
uid: nobody
gid: nobody

# Listeners
listen:
    -   address: :4430

        timeout:
            connect: 2
            read: 2
            write: 3

        # Quic server needs a TLS config
        tls:
            quic: true
            cert: /path/to/server.crt
            key: /path/to/server.key
            ca: /path/to/ca.crt # server cert verification chain

            # We will use client certs to authenticate clients
            clientcert: required
            clientca: /path/to/clientca.crt

            # if address is a name, then servername is populated from it.
            # else, if it is an IP address, it must be set below.
            # Not setting it => no verification (InsecureSkipVerify = true)
            # servername: a.example.com
       
        # limit to N reqs/sec globally
        ratelimit:
            global: 20000
            perhost: 100

        # special connect address of SOCKS indicates dynamic end points derived
        # from the underlying socks protocol in each stream
        connect:
            address: SOCKS


# vim: expandtab:sw=4:ts=4:tw=88:
