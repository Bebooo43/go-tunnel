# Log file; can be one of:
#  - Absolute path
#  - SYSLOG
#  - STDOUT
#  - STDERR
log: STDOUT
#log: STDOUT

# Logging level - "DEBUG", "INFO", "WARN", "ERROR"
loglevel: DEBUG

# Drop privileges after reading certs and binding to listeners
uid: nobody
gid: nobody

# Listeners
listen:
    -   address: 127.0.0.1:9090
        allow: [127.0.0.1/8, 11.0.1.0/24, 11.0.2.0/24]
        deny: []

        timeout:
            connect: 10
            read: 10
            write: 30
       
        # limit to N reqs/sec globally
        ratelimit:
            global: 2000
            perhost: 30

        connect:
            address: 55.66.77.88:443
            bind: 44.33.22.55

            tls:
                cert: /path/to/crt
                key: /path/to/key
                ca: /path/to/ca.crt # server cert verification chain

                # if address is a name, then servername is populated from it.
                # else, if it is an IP address, it must be set below.
                # Not setting it => no verification (InsecureSkipVerify = true)
                # servername: a.example.com

    -   address: 127.0.0.1:9443
        allow: [127.0.0.1/8, 11.0.1.0/24, 11.0.2.0/24]
        deny: []

        timeout:
            connect: 8
            read: 9
            write: 27
        tls:
            sni: /path/to/cert/dir

		    # clientcert can be "required" or "optional" or "blank" or absent.
            clientcert: required

		    # if it is required/optional, then clientca must be set to the list of
		    # CAs that can verify a presented client cert. This can be a file or
            # directory.
            clientca: /path/to/clientca.crt

        # plain connect
        connect:
            address: 55.66.77.88:80
            # send original client's address via ProxyProtocol v1 format.
            proxyprotocol: v1

    # 3rd listener:
    # Listen on Quic port with client auth and unpack SOCKsv5 message from each stream
    # and connect dynamically
    -   address: 127.0.0.1:9445
        allow: [127.0.0.1/8, 11.0.1.0/24, 11.0.2.0/24]
        deny: []

        timeout:
            connect: 5
            read: 2
            write: 4
        tls:
            sni: /path/to/cert/dir

            # if quic is set to true, use QUIC over UDP to connect
            # to the named addr/port
            # use quic on the listening port (UDP)
            quic: true

		    # clientcert can be "required" or "optional" or "blank" or absent.
            clientcert: required

		    # if it is required/optional, then clientca must be set to the list of
		    # CAs that can verify a presented client cert. This can be a file or
            # directory.
            clientca: /path/to/clientca.crt

        # Socks v5 on the outbound connection
        # The connecting agent runs socks protocol on each stream
        connect:
            address: SOCKS



# vim: expandtab:sw=4:ts=4:tw=88:
